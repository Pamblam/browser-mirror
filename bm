#!/usr/bin/env bash

HERE="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

SUBCOMMAND=$1 # should be server or client or --help
OPERATIVE=$2 

if [ "$SUBCOMMAND" = "uninstall" ]; then
  # bm uninstall
  if [[ $EUID -ne 0 ]]; then
    echo "This script must be run as root" 
    exit 1
  fi
  [ -f /etc/profile ] && grep -v "$HERE" /etc/profile > temp && mv temp /etc/profile
  [ -f "/usr/local/share/man/man1/bm.1" ] && rm -rf /usr/local/share/man/man1/bm.1
  [ -f "/usr/local/share/man/man1/bm.1.gz" ] && rm -rf /usr/local/share/man/man1/bm.1.gz
  [ -f "/usr/share/man/man1/bm.1" ] && rm -rf /usr/share/man/man1/bm.1
  [ -f "/usr/share/man/man1/bm.1.gz" ] && rm -rf /usr/share/man/man1/bm.1.gz
  [ -x "$(command -v mandb)" ] && mandb
  rm -rf $HERE/*
  killall bm-server
elif [ "$SUBCOMMAND" = "update" ]; then
  # bm update
  if [[ $EUID -ne 0 ]]; then
    echo "This script must be run as root" 
    exit 1
  fi
  CURR_PACKAGE_VERSION=$(curl https://raw.githubusercontent.com/Pamblam/browser-mirror/master/package.json \
    | grep version \
    | head -1 \
    | awk -F: '{ print $2 }' \
    | sed 's/[",]//g' \
    | tr -d '[[:space:]]')
  THIS_PACKAGE_VERSION=$(cat $HERE/node_modules/browser-mirror/package.json \
    | grep version \
    | head -1 \
    | awk -F: '{ print $2 }' \
    | sed 's/[",]//g' \
    | tr -d '[[:space:]]')
  LATEST_VERSION=$(echo  "$THIS_PACKAGE_VERSION
$CURR_PACKAGE_VERSION" | sort -t '.' -k 1,1 -k 2,2 -k 3,3 -g -r | head -1)
  if [ "$LATEST_VERSION" = "$THIS_PACKAGE_VERSION" ]; then
    echo "  Browser-Mirror is up to date."
  else
    [ -f /etc/profile ] && sed -n '/bm-server/!p' /etc/profile
    [ -f /etc/profile ] && grep -v "$HERE" /etc/profile > temp && mv temp /etc/profile
    [ -f "/usr/local/share/man/man1/bm.1" ] && rm -rf /usr/local/share/man/man1/bm.1
    [ -f "/usr/local/share/man/man1/bm.1.gz" ] && rm -rf /usr/local/share/man/man1/bm.1.gz
    [ -f "/usr/share/man/man1/bm.1" ] && rm -rf /usr/share/man/man1/bm.1
    [ -f "/usr/share/man/man1/bm.1.gz" ] && rm -rf /usr/share/man/man1/bm.1.gz
    [ -x "$(command -v mandb)" ] && mandb
    rm -rf $HERE/*
    killall bm-server
    source /dev/stdin <<< "$(curl https://raw.githubusercontent.com/Pamblam/browser-mirror/master/installer)"
  fi
elif [ "$SUBCOMMAND" = "server" ]; then
  if [ "$OPERATIVE" = "start" ]; then
    # bm server start
    if [ -f "$HERE/running.lock" ]; then
      echo "  BM Server is already running"
    else 
      nohup $HERE/bm-server > logs.txt 2>&1 &
      touch $HERE/running.lock
      echo "  BM Server running"
    fi
  elif [ "$OPERATIVE" = "stop" ]; then
    # bm server stop
    killall bm-server
    rm -rf $HERE/running.lock
    echo "  BM Server stopped"
  elif [ "$OPERATIVE" = "logs" ]; then
    # bm server logs
    cat $HERE/logs.txt
  elif [ "$OPERATIVE" = "status" ]; then
	if [ -f "$HERE/running.lock" ]; then
        echo "  BM Server is running"
    else
        echo "  BM Server is not running"
    fi
  else
    echo "  unknown option: $OPERATIVE"
    echo "  try 'bm --help' for usage help."
  fi
elif [ "$SUBCOMMAND" = "client" ]; then
  if [ "$OPERATIVE" = "install" ]; then
    # bm install client /path/to/install/to
    if [ ! -d $3 ]; then
      echo "  $3 is not a directory"
    else
      cat "$HERE/node_modules/browser-mirror/bm-client.js" > "$3/bm-client.js"
      echo "  Installed bm-client.js to $3/bm-client.js"
    fi
  else
    echo "  unknown option: $OPERATIVE"
    echo "  try 'bm --help' for usage help."
  fi
elif [ "$SUBCOMMAND" = "--help" ]; then
  # bm --help
  echo "  Report bugs to: https://github.com/Pamblam/browser-mirror/issues"
  echo "  pkg home page: https://github.com/Pamblam/browser-mirror"
  echo "  Usage: man bm"
elif [ " $SUBCOMMAND" = "--version" ]; then
  # bm --version
  echo "  v1.1.6"
else 
  echo "  unknown option: $SUBCOMMAND"
  echo "  try 'bm --help' or 'man bm' for usage help."
fi